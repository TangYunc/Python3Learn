MySQL的安装
1.Ubuntu安装MySQL服务 RedHat（红帽），Centos，Ubuntu
	1.安装服务端
		sudo apt-get install mysql-sever
	2.安装客户端
		sudo apt-get install mysql-client

2.widdowss安装MYSQL服务
	1。下载MYSQL安装包，按照教程安装即可

3.启动和链接MySQL服务
	1.服务端启动
		查看MySQL服务状态
		sudo /etc/init.d/mysql status
		停止（启动\重启）MySQL服务
		sudo /etc/init.d/mysql stop （start\restart）
	2.客户端连接		
		命令格式
			mysql -h主机地址 -u用户名 -p密码	
			mysql -hlocalhost -uroot -pp123456
		本地连接可以省略 -h 选项
			mysql -u用户名 -p密码	
			mysql -uroot -pp123456	

4.基本SQL命令
	1.SQL命令的使用规则
		每条SQL命令必须以；结尾
		SQL命令不区分字母大小写
		使用\c来终止命令的执行（Linux中 ctrl + c）			
	2.库的管理
		库的基本操作
		（1）查看已有的库（show databases;）
		 (2)创建库(create database 库名;)
		 (3)查看创建库的语句（show create databases 库名;）
		 (4)查看当前所在库（select database();）
		 (5)切换库（use 库名;）
		 (6)查看库中已有的表（show tables;)
		 (7)删除库（drop database 库名;）
	3.库名的命名规则
		(1)可以使用数字，字母，_,但是不能使用纯数字
		（2）库名区分字母大小写
		（3）库名具有唯一性
		（4）不能使用特殊字符和MySQL关键字
	4.表的管理(表的命名规则同库的命名规则)
		(1)创建表（指定字符集）
			create table 表名(
			字段名 数据类型,
			字段名 数据类型,
			... ...
			)
		(2)查看创建表的语句（字符集）
			show crate table 表名;
		(3)查看表结构
			desc 表名;
		(4)删除表
			drop table 表名;
	
	5.注意
		(1)所有的数据都是以稳健的形式存放子啊数据库目录下
		(2)数据库目录: /var/lib/mysql	


5.更改库，表的默认字符集
	1.方法
		通过更改MySQL服务的配置文件来实现
	2.步骤
		（1）获取root权限（sudo -i）
		（2）切换到配置文件所在路径（cd /etc/mysql/mysql.conf.d）	
		（3）备份（cp mysqlld.cnf mysqld.cnf.bak）
		（4）用vi打开mysqld.cnf(vi mysqld.cnf),在[mysqld] character_set_server = utf8保存退出
		（5）重启mysql服务（/etc/init.d/mysql restart）
		（6）推出超级用户exit
		（7）登录到mysql验证：(mysql -uroot -p12345    create database 库名;    show create database 库名;)


6.表记录管理
	1.在表中插入记录
		（1）insert into 表名 values(值1),(值2),...,(值N);		
		（2）insert into 表名(字段名列表) values(值1),(值2),...,(值N);	
	2.查询表记录
		（1）select * from 表名;
		（2）select 字段1， 字段名2, ...,字段名N from表名;

7.客户端把数据存储到数据库服务器上的过程
	1.连接到数据库服务器mysql -uroot -p123456
	2.选择一个库：use库名;
	3.创建表或者修改表：create...
	4.断开与数据库服务器的连接：exit | quit | \q				

8.名词介绍
	1.DB(database)
		DB就是数据库，存储数据的仓库
	2.DBMS(datebase management system)
		数据库管理系统，管理数据库的软件：MySQL,Oracle,MongoDB...
	3.DBS(database system)
		数据库系统，DBS = DB + DBMS + 数据库应用（财务管理，人事管理系统）+ 用户

9.数据类型
	1.数值类型
		（1）整型 
			int 大整型（4个字节）取值范围：0～2**32-2（42亿多）		
			tinyint 微小整型（1个字节）
				有符号（signed默认）：-128～127
				无符号（unsigned）：0～255 
			smallint 小整型（2个字节）取值范围0～65535
			bigint 极大整型（8个字节）取值范围0～2**64-1	
		（2）浮点型
			1.float（4个字节，最多显示7个有效位）
				用法：字段名 float(m, n) m：总位数 n：小数位数
				注意：浮点型插入整数时会自动补全小数位位数，小数位如果多余制定的位数，会对指定位的下一位进行四舍五入
			2.double(8根字节，最多显示15个有效位)
				用法：double(m, n)
			3.decimal(M+2个字节，最多显示28个有效位)
				用法：decimal(28,5)	
		(3)字符类型
			1.char(定长)
				取值范围：1～255		
				不给定宽度默认为1
			2.varchar(变长)
				取值范围：1～65535
				注意：varchar没有默认宽度，必须给订一个宽度值
			3.char 和 varchar的特点
				char浪费存储空间，但是性能高
				varchar节省存储空间，但是性能低
		（4）枚举类型
			1.定义：字段值只能在列举的范围内选择
			2.enum()单选（最多有65535个不同的值）字段名 enum(值1，值2，...,值N)
			3.set()多选（最多有64个不同的值） 字段名 set(值1，值2，...,值N).在插入记录是"a,b,c"
		（5）日期时间类型
			1.year: YYYY
			2.date: YYYYMMDD
			3.time: HHMMSS
			4.datetime: YYYYMMDDHHMMSS
			5.timestamp: YYYYMMDDHHMMSS
				注意：插入记录时datetime字段不给值默认返回NULL
					插入记录时timestamp字段不给值默认返回系统当前时间

10.表字段的操作
	1.语法 alter table 表名 执行动作;
		（1）添加字段
			alter table 表名 add 字段名 数据类型 first | after 字段名;
		（2）删除字段						
			alter table 表名 drop 字段名;
		（3）修改字段数据类型						
			alter table 表名 modify 字段名 新数据类型;
				#修改数据类时会收到表中原有数据的限制
		（4）修改字段名
			alter table 表名 change 旧名 新名 数据类型;
		（5）修改表名
			alter table 表名 rename 新表名;
























		 